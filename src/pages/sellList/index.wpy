
<template lang="wxml" miniapp="wepy">
  <view class="page-contain page-sellList">
    
    <search></search>

    <view class="sellList-wrap">

      <view class="sellList-wrap__tabs proxy-flex is-align-middle font-size--30">
        <view class="tab-plane" @tap.stop="hanldeToTab">
          <text class="tab-plane__label">下单时间</text>
          <text class="arrow-box">
            <text class="arrow-box__up arrow {{ order === 'desc' ? 'active' : '' }}"></text>
            <text class="arrow-box__down arrow {{ order === 'asc' ? 'active' : '' }}"></text>
          </text>
        </view>
        <view class="tab-plane">
          <picker bindchange="bindPickerChange" value="{{index}}" range="{{orderStatus}}">
            <view class="tab-plane__item proxy-flex is-align-middle">
              <text class="tab-plane__label">{{ orderStatus[index] }}</text>
              <text class="arrow-box">
                <text class="arrow-box__up arrow"></text>
                <text class="arrow-box__down arrow"></text>
              </text>
            </view>
          </picker>
        </view>
      </view>

      <view class="table">
        <view class="table-tr table-thead proxy-flex is-align-middle">
          <view class="table-tr__col table-thead__th">订单号</view>
          <view class="table-tr__col table-thead__th">商品种类</view>
          <view class="table-tr__col table-thead__th">下单时间</view>
          <view class="table-tr__col table-thead__th">下单状态</view>
        </view>
        <block wx:if="{{tableData.length}}">
          <navigator url="/pages/sellOrder/index?id={{ item.id}}" wx:for="{{tableData}}" wx:key="index" class="table-tr proxy-flex is-align-middle font-size--24">
            <view class="table-tr__col table-thead__td">{{ item.orderSn }}</view>
            <view class="table-tr__col table-thead__td">{{ item.categoryNum }}</view>
            <view class="table-tr__col table-thead__td">{{ item.addTime }}</view>
            <view class="table-tr__col table-thead__td">{{ status[item.orderStatus] }}</view>
          </navigator>
        </block>
        <view class="font-size--26 table-empty" wx:else>暂无相关数据</view>
      </view>

    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Search from '../../components/search'
  import orderApis from '../../api/order'
  export default class sellList extends wepy.page {
    config = {
      navigationBarTitleText: '销售列表'
    }
    components = {
      search: Search
    }
    data = {
      isFirst: false,
      page: 1,
      limit: 20,
      tableData: [],
      hasMoreData: false,
      orderSn: '',
      order: 'desc',
      status: {
        0: '全部订单',
        101: '未付款',
        201: '已付款',
        301: '已发货',
        401: '已收货'
      },
      index: 0,
      orderStatusArray: ''
    }
    computed = {
      orderIndex () {
        return Object.keys(this.status)
      },
      orderStatus () {
        return Object.values(this.status)
      }
    }
    async sellList () {
      try {
        wx.showLoading({
          title: '加载中',
          mask: true
        })
        let { page, limit, tableData, orderSn, order, orderStatusArray } = this
        const opts = {
          page,
          limit,
          order
        }
        if (+orderStatusArray) {
          opts.orderStatusArray = orderStatusArray
        }
        if (orderSn) {
          opts.orderSn = orderSn
        }
        const { data } = await orderApis.listBrand(opts)
        this.isFirst = true
        if (page === 1) {
          tableData = []
        }
        this.tableData = tableData.concat(data.items)
        if (data.items.length < limit) {
          this.hasMoreData = false
        } else {
          this.hasMoreData = true
          this.page ++
        }
        this.$apply()
        wx.hideLoading()
      } catch (error) {
        console.log(error)
        wx.hideLoading()
      }
    }
    events = {
      handleToSearch (val) {
        this.orderSn = val
        this.page = 1
        this.sellList()
      },
      handleEmptySearch () {
        this.name = ''
      }
    }
    onReachBottom () {
      if (this.hasMoreData) {
        this.sellList()
      }
    }
    bindPickerChange (e) {
      const { value } = e.detail
      this.index = value
      this.orderStatusArray = this.orderIndex.filter((item, index) => index === +value)[0]
      this.page = 1
      this.sellList()
    }
    onLoad () {
      this.sellList()
    }
    methods = {
      hanldeToTab (type) {
        this.order = this.order === 'desc' ? 'asc' : 'desc'
        this.page = 1
        this.sellList()
      }
    }
    onUnload () {
    }
    onHide () {
    }
    onShow () {
      if (this.isFirst) {
        this.sellList()
      }
    }
  }
</script>
<style lang='postcss'>
  @import 'src/styles/pages/sellList/index.postcss';
</style>
